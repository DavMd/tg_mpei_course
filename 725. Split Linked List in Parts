//https://leetcode.com/problems/split-linked-list-in-parts/
using l = ListNode*;
class Solution {
public:
	vector<l> splitListToParts(l root, int k)
    {
		int n = 0;
		ListNode* r = root;
        for (n;r != nullptr;n++) { r = r->next; }
		vector<l> res(k);
		int n2 = n / k, m = n % k;
		for (int i = 0; i < std::min(k, n); i++)
		{
			res[i] = r = root;
			for (int j = 0; j < (i >= m ? n2 : n2 + 1) - 1; ++j) { r = r->next; }
			root = r->next;
			r->next = nullptr;
		}
		return res;
	}
};
